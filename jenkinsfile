pipeline {
  environment {
    dockerimagename = "chandu0108/chandu-devops-1"
    dockerImage = ""
    KUBECONFIG = "/home/handu/.minikube/config"  // Ensure this path is accessible by Jenkins
  }

  agent any

  stages {
    stage('Checkout Source') {
      steps {
        git credentialsId: 'github', url: 'https://github.com/master-projects-theses/2024-fall-Venkata-Hemachandu-Gariganti.git', branch: 'main'
      }
    }

    stage('Build Image') {
      steps {
        script {
          dockerImage = docker.build(dockerimagename)
        }
      }
    }

    stage('Push Image') {
      environment {
        registryCredential = 'dockerhublogin'
      }
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com', registryCredential) {
            dockerImage.push("latest")
          }
        }
      }
    }

    stage('Deploy App to Kubernetes') {
      steps {
        withKubeConfig([credentialsId: 'kubernetes']) {
          script {
            // Remove permission adjustment commands if not required
            // Ensure Jenkins has appropriate permissions to access kubeconfig and certificate files directly
            sh """
            kubectl set image deployment/django-app-deployment django-container=${dockerimagename}:${env.BUILD_ID}
            kubectl apply -f deployment.yaml
            """
          }
        }
      }
    }
  }

  post {
    success {
      echo 'Pipeline completed successfully.'
    }
    failure {
      echo 'Pipeline failed.'
    }
  }
}

